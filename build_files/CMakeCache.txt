# This is the CMakeCache file.
# For build in directory: /Users/largett/Documents/GitHub/blender/build_files
# It was generated by CMake: /opt/homebrew/Cellar/cmake/3.30.1/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Use instead of the current date for reproducible builds (empty
// string disables this option)
BUILDINFO_OVERRIDE_DATE:STRING=

//Use instead of the current time for reproducible builds (empty
// string disables this option)
BUILDINFO_OVERRIDE_TIME:STRING=

//Path to a file.
BZIP2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include

//Path to a library.
BZIP2_LIBRARY_DEBUG:FILEPATH=BZIP2_LIBRARY_DEBUG-NOTFOUND

//Path to a library.
BZIP2_LIBRARY_RELEASE:FILEPATH=/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/libbz2.tbd

//Value Computed by CMake
Blender_BINARY_DIR:STATIC=/Users/largett/Documents/GitHub/blender/build_files

//Value Computed by CMake
Blender_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
Blender_SOURCE_DIR:STATIC=/Users/largett/Documents/GitHub/blender

//Path to a program.
CMAKE_ADDR2LINE:FILEPATH=CMAKE_ADDR2LINE-NOTFOUND

//Path to a program.
CMAKE_AR:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/ar

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=Release

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/c++

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

CMAKE_CXX_FLAGS_RELEASE:STRING=-O2 -DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//C compiler
CMAKE_C_COMPILER:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/cc

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

CMAKE_C_FLAGS_RELEASE:STRING=-O2 -DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Path to a program.
CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=/Users/largett/Documents/GitHub/blender/build_files/CMakeFiles/pkgRedirects

//Path to a program.
CMAKE_INSTALL_NAME_TOOL:FILEPATH=/usr/bin/install_name_tool

//default install path
CMAKE_INSTALL_PREFIX:PATH=/Users/largett/Documents/GitHub/blender/build_files/bin/${BUILD_TYPE}

//Path to a program.
CMAKE_LINKER:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/ld

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=CMAKE_OBJCOPY-NOTFOUND

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/objdump

//Choose the architecture you want to build Blender for: arm64
// or x86_64
CMAKE_OSX_ARCHITECTURES:STRING=arm64

CMAKE_OSX_DEPLOYMENT_TARGET:STRING=11.2

CMAKE_OSX_SYSROOT:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=Blender

//Path to a program.
CMAKE_RANLIB:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/ranlib

//Path to a program.
CMAKE_READELF:FILEPATH=CMAKE_READELF-NOTFOUND

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/strip

//Path to a program.
CMAKE_TAPI:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/tapi

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Use instead of the standard packagename (empty string disables
// this option)
CPACK_OVERRIDE_PACKAGENAME:STRING=

//Run regression tests on the specified device types (CPU CUDA
// OPTIX HIP)
CYCLES_TEST_DEVICES:STRING=CPU

//Git command line client
GIT_EXECUTABLE:FILEPATH=/usr/bin/git

//Link with LLVM static libraries
LLVM_STATIC:BOOL=OFF

//Path to a file.
OPENAL_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenAL.framework/Headers

//Path to a library.
OPENAL_LIBRARY:FILEPATH=/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenAL.framework

//Run given CMake script as the last step of CMake configuration
POSTCONFIGURE_SCRIPT:FILEPATH=

//Run given CMake script after installation process
POSTINSTALL_SCRIPT:FILEPATH=

//Path to python site-packages or dist-packages containing 'zstandard'
// module
PYTHON_ZSTANDARD_PATH:PATH=

//Python executable to run unit tests
TEST_PYTHON_EXE:PATH=

//Enable Alembic Support
WITH_ALEMBIC:BOOL=ON

//Call abort() when raising an assertion through BLI_assert()
WITH_ASSERT_ABORT:BOOL=ON

//Build with asserts enabled even for non-debug configurations
WITH_ASSERT_RELEASE:BOOL=OFF

//Build with blenders audio library (only disable if you know what
// you're doing!)
WITH_AUDASPACE:BOOL=ON

//Build blender (disable to build only Cycles stand-alone).
WITH_BLENDER:BOOL=ON

//Build stand-alone "blender-thumbnailer" command-line thumbnail
// extraction utility, intended for use by file-managers to extract
// PNG images from `.blend` files.
WITH_BLENDER_THUMBNAILER:BOOL=OFF

//Enable features depending on boost
WITH_BOOST:BOOL=ON

//Include extra build details (only disable for development & faster
// builds)
WITH_BUILDINFO:BOOL=ON

//Enable Bullet (Physics Engine)
WITH_BULLET:BOOL=ON

//Use Clang
WITH_CLANG:BOOL=OFF

//Enable FFMPeg Support (http://ffmpeg.org)
WITH_CODEC_FFMPEG:BOOL=ON

//Enable libsndfile Support (http://www.mega-nerd.com/libsndfile)
WITH_CODEC_SNDFILE:BOOL=ON

//Build and link against address sanitizer (only for Debug & RelWithDebInfo
// targets).
WITH_COMPILER_ASAN:BOOL=OFF

//Build `extern` dependencies with address sanitizer when WITH_COMPILER_ASAN
// is on. Can cause linking issues due to too large binary size.
WITH_COMPILER_ASAN_EXTERN:BOOL=OFF

//Use ccache to improve rebuild times (Works with Ninja, Makefiles
// and Xcode)
WITH_COMPILER_CCACHE:BOOL=OFF

//Build and link with code coverage support (only for Debug targets).
WITH_COMPILER_CODE_COVERAGE:BOOL=OFF

//Use pre-compiled headers to speed up compilation.
WITH_COMPILER_PRECOMPILED_HEADERS:BOOL=ON

//Make paths in macros like __FILE__ relative to top level source
// and build directories.
WITH_COMPILER_SHORT_FILE_MACRO:BOOL=ON

//Enable the tile based CPU nodal compositor
WITH_COMPOSITOR_CPU:BOOL=ON

//Enable regression testing for realtime compositor
WITH_COMPOSITOR_REALTIME_TESTS:BOOL=OFF

//Enable CoreAudio for audio support on macOS
WITH_COREAUDIO:BOOL=ON

//Enable SIMD instruction if they're detected on the host machine
WITH_CPU_SIMD:BOOL=ON

//Enable GuardedAlloc for C++ memory allocation tracking (only
// enable for development)
WITH_CXX_GUARDEDALLOC:BOOL=OFF

//Enable Cycles Render Engine
WITH_CYCLES:BOOL=ON

//Build Cycles with options useful for debugging (e.g., MIS)
WITH_CYCLES_DEBUG:BOOL=OFF

//Build Cycles with additional asserts for detecting NaNs and invalid
// values
WITH_CYCLES_DEBUG_NAN:BOOL=OFF

//Enable Cycles Apple Metal compute support
WITH_CYCLES_DEVICE_METAL:BOOL=ON

//Build Cycles with Embree support
WITH_CYCLES_EMBREE:BOOL=ON

//Build Cycles Hydra render delegate
WITH_CYCLES_HYDRA_RENDER_DELEGATE:BOOL=OFF

//Build Cycles kernels with address sanitizer when WITH_COMPILER_ASAN
// is on, even if it's very slow
WITH_CYCLES_KERNEL_ASAN:BOOL=OFF

//Build Cycles with logging support
WITH_CYCLES_LOGGING:BOOL=ON

//Build Cycles with native kernel only (which fits current CPU,
// use for development only)
WITH_CYCLES_NATIVE_ONLY:BOOL=OFF

//Build Cycles with OpenShadingLanguage support
WITH_CYCLES_OSL:BOOL=ON

//Build Cycles with path guiding support
WITH_CYCLES_PATH_GUIDING:BOOL=ON

//Build Cycles data precomputation tool
WITH_CYCLES_PRECOMPUTE:BOOL=OFF

//Build Cycles standalone application
WITH_CYCLES_STANDALONE:BOOL=OFF

//Build Cycles standalone with GUI
WITH_CYCLES_STANDALONE_GUI:BOOL=OFF

//Run additional Cycles test with OSL enabled
WITH_CYCLES_TEST_OSL:BOOL=OFF

//Enable Draco mesh compression Python module (used for glTF)
WITH_DRACO:BOOL=ON

//Add extra debug capabilities to Draw Manager
WITH_DRAW_DEBUG:BOOL=OFF

//Enable experimental features
WITH_EXPERIMENTAL_FEATURES:BOOL=ON

//Enable FFTW3 support (Used for smoke, ocean sim, glare, and audio
// effects)
WITH_FFTW3:BOOL=ON

//Enable Freestyle (advanced edges rendering)
WITH_FREESTYLE:BOOL=ON

//Enable features relying on fribidi
WITH_FRIBIDI:BOOL=OFF

//Enable debugging output for the GHOST library
WITH_GHOST_DEBUG:BOOL=OFF

//Enable building Blender against SDL for windowing rather than
// the native APIs
WITH_GHOST_SDL:BOOL=OFF

//Enable features depending on GMP (Exact Boolean)
WITH_GMP:BOOL=ON

//Shader builder is a developer option enabling linting on GLSL
// during compilation
WITH_GPU_BUILDTIME_SHADER_BUILDER:BOOL=OFF

//Enable GPU drawing related unit testing (GPU backends and draw
// manager)
WITH_GPU_DRAW_TESTS:BOOL=OFF

//Enable GPU render related unit testing (EEVEE, Workbench and
// Grease Pencil)
WITH_GPU_RENDER_TESTS:BOOL=OFF

//Run GPU render tests silently (finished tests will pass). Generated
// report will show failing tests
WITH_GPU_RENDER_TESTS_SILENT:BOOL=ON

//Enable GTest unit testing
WITH_GTESTS:BOOL=OFF

//Enable features relying on harfbuzz
WITH_HARFBUZZ:BOOL=OFF

//Enable features relying on Libharu (Grease pencil PDF export)
WITH_HARU:BOOL=ON

//Build without graphical support (renderfarm, server mode only)
WITH_HEADLESS:BOOL=OFF

//Enable Hydra render engine
WITH_HYDRA:BOOL=ON

//Enable ITASC IK solver (only disable for development & for incompatible
// C++ compilers)
WITH_IK_ITASC:BOOL=ON

//Enable Legacy IK solver (only disable for development)
WITH_IK_SOLVER:BOOL=ON

//Enable CINEON and DPX Image Support
WITH_IMAGE_CINEON:BOOL=ON

//Enable OpenEXR Support (http://www.openexr.com)
WITH_IMAGE_OPENEXR:BOOL=ON

//Enable OpenJpeg Support (http://www.openjpeg.org)
WITH_IMAGE_OPENJPEG:BOOL=ON

//Enable WebP Image Support
WITH_IMAGE_WEBP:BOOL=ON

//Enable Input Method Editor (IME) for complex Asian character
// input
WITH_INPUT_IME:BOOL=ON

//Enable NDOF input devices (SpaceNavigator and friends)
WITH_INPUT_NDOF:BOOL=ON

//Copy the official Blender Authors's copyright.txt into the Blender
// install folder
WITH_INSTALL_COPYRIGHT:BOOL=OFF

//Enable I18N (International fonts and text)
WITH_INTERNATIONAL:BOOL=ON

//Enable grease-pencil file format IO (*.svg, *.pdf)
WITH_IO_GPENCIL:BOOL=ON

//Enable PLY 3D file format support (*.ply)
WITH_IO_PLY:BOOL=ON

//Enable STL 3D file format support (*.stl)
WITH_IO_STL:BOOL=ON

//Enable Wavefront-OBJ 3D file format support (*.obj)
WITH_IO_WAVEFRONT_OBJ:BOOL=ON

//Enable JACK Support (http://www.jackaudio.org)
WITH_JACK:BOOL=OFF

//Enable runtime dynamic JACK libraries loading
WITH_JACK_DYNLOAD:BOOL=OFF

//Enable Libmv structure from motion library
WITH_LIBMV:BOOL=ON

//Enable fixed-size schur specializations.
WITH_LIBMV_SCHUR_SPECIALIZATIONS:BOOL=ON

//Use ld.lld linker which is usually faster than ld.gold
WITH_LINKER_LLD:BOOL=OFF

//Use ld.mold linker which is usually faster than ld.gold & ld.lld
WITH_LINKER_MOLD:BOOL=OFF

//Use LLVM
WITH_LLVM:BOOL=OFF

//Enable best LZMA compression, (used for pointcache)
WITH_LZMA:BOOL=ON

//Enable fast LZO compression (used for pointcache)
WITH_LZO:BOOL=ON

//Enable MaterialX Support
WITH_MATERIALX:BOOL=ON

//Enable malloc replacement (http://www.canonware.com/jemalloc)
WITH_MEM_JEMALLOC:BOOL=ON

//Enable extended valgrind support for better reporting
WITH_MEM_VALGRIND:BOOL=OFF

//Use Metal for graphics instead of (or as well as) OpenGL on macOS.
WITH_METAL_BACKEND:BOOL=ON

//Enable Mantaflow Fluid Simulation Framework
WITH_MOD_FLUID:BOOL=ON

//Enable Ocean Modifier
WITH_MOD_OCEANSIM:BOOL=ON

//Enable Remesh Modifier
WITH_MOD_REMESH:BOOL=ON

//Enable usage of NanoVDB data structure for rendering on the GPU
WITH_NANOVDB:BOOL=ON

//Enable OpenAL Support (http://www.openal.org)
WITH_OPENAL:BOOL=ON

//Enable OpenCollada Support (http://www.opencollada.org)
WITH_OPENCOLLADA:BOOL=ON

//Enable OpenColorIO color management
WITH_OPENCOLORIO:BOOL=ON

//Enable the OpenImageDenoise compositing node
WITH_OPENIMAGEDENOISE:BOOL=ON

//Enable OpenMP (has to be supported by the compiler)
WITH_OPENMP:BOOL=ON

//Enable OpenSubdiv for surface subdivision
WITH_OPENSUBDIV:BOOL=ON

//Enable features relying on OpenVDB
WITH_OPENVDB:BOOL=ON

//Assume OpenVDB library has been compiled with version 3 ABI compatibility
WITH_OPENVDB_3_ABI_COMPATIBLE:BOOL=OFF

//Enable blosc compression for OpenVDB, only enable if OpenVDB
// was built with blosc support
WITH_OPENVDB_BLOSC:BOOL=ON

//Enable features relying on potrace
WITH_POTRACE:BOOL=ON

//Enable PugiXML support (Used for OpenImageIO, Grease Pencil SVG
// export)
WITH_PUGIXML:BOOL=ON

//Enable Embedded Python API (only disable for development)
WITH_PYTHON:BOOL=ON

//Copy system python into the blender install folder
WITH_PYTHON_INSTALL:BOOL=ON

//Copy system NumPy into the blender install folder
WITH_PYTHON_INSTALL_NUMPY:BOOL=ON

//Copy zstandard into the blender install folder
WITH_PYTHON_INSTALL_ZSTANDARD:BOOL=ON

//Enable building as a python module which runs without a user
// interface, like running regular blender in background mode (only
// enable for development), installs to PYTHON_SITE_PACKAGES (or
// CMAKE_INSTALL_PREFIX if WITH_INSTALL_PORTABLE is enabled).
WITH_PYTHON_MODULE:BOOL=OFF

//Include NumPy in Blender (used by Audaspace and Mantaflow)
WITH_PYTHON_NUMPY:BOOL=ON

//Enable internal API error checking to track invalid data to prevent
// crash on access (at the expense of some efficiency, only enable
// for development).
WITH_PYTHON_SAFETY:BOOL=OFF

//Disables execution of scripts within blend files by default
WITH_PYTHON_SECURITY:BOOL=ON

//Build with quadriflow remesher support
WITH_QUADRIFLOW:BOOL=ON

//Use Renderdoc API to capture frames
WITH_RENDERDOC:BOOL=OFF

//Enable SDL for sound
WITH_SDL:BOOL=ON

//When requirements for a build option are not met, error instead
// of disabling the option.
WITH_STRICT_BUILD_OPTIONS:BOOL=OFF

//Ensure string operations on fixed size buffers (works well with
// with "WITH_COMPILER_ASAN" & valgrind to detect incorrect buffer
// size arguments)
WITH_STRSIZE_DEBUG:BOOL=OFF

//Build with external audaspace library installed on the system
// (only enable if you know what you're doing!)
WITH_SYSTEM_AUDASPACE:BOOL=OFF

//Use the systems bullet library (currently unsupported due to
// missing features in upstream!)
WITH_SYSTEM_BULLET:BOOL=OFF

//Use system-wide Gflags instead of a bundled one
WITH_SYSTEM_GFLAGS:BOOL=OFF

//Use system-wide Glog instead of a bundled one
WITH_SYSTEM_GLOG:BOOL=OFF

//Enable multi-threading. TBB is also required for features such
// as Cycles, OpenVDB and USD
WITH_TBB:BOOL=ON

//Run multiple tests in a single Blender invocation, for faster
// test execution
WITH_TESTS_BATCHED:BOOL=ON

//Link GTest tests into a single binary. For faster overall build
// and less disk space, but slower individual test build
WITH_TESTS_SINGLE_BINARY:BOOL=ON

//Enable unity build for modules that support it to improve compile
// times.
//\nWARNING: this option allows files to be built without all necessary
// headers!
//\n
//\nThis option should be disabled before manipulating or removing
// headers.
WITH_UNITY_BUILD:BOOL=ON

//Enable Universal Scene Description (USD) Support
WITH_USD:BOOL=ON

//Enable Vulkan as graphics backend (experimental)
WITH_VULKAN_BACKEND:BOOL=ON

//Use guardedalloc for host allocations done inside Vulkan (development
// option)
WITH_VULKAN_GUARDEDALLOC:BOOL=OFF

//Enable Vulkan over MoltenVK (development option)
WITH_VULKAN_MOLTENVK:BOOL=OFF

//Enable VR features through the OpenXR specification
WITH_XR_OPENXR:BOOL=OFF

//Path to a file.
ZLIB_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include

//Path to a library.
ZLIB_LIBRARY_DEBUG:FILEPATH=ZLIB_LIBRARY_DEBUG-NOTFOUND

//Path to a library.
ZLIB_LIBRARY_RELEASE:FILEPATH=/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: BUILDINFO_OVERRIDE_DATE
BUILDINFO_OVERRIDE_DATE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: BUILDINFO_OVERRIDE_TIME
BUILDINFO_OVERRIDE_TIME-ADVANCED:INTERNAL=1
//ADVANCED property for variable: BZIP2_INCLUDE_DIR
BZIP2_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: BZIP2_LIBRARY_DEBUG
BZIP2_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: BZIP2_LIBRARY_RELEASE
BZIP2_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
//Have symbol BZ2_bzCompressInit
BZIP2_NEED_PREFIX:INTERNAL=1
//ADVANCED property for variable: CMAKE_ADDR2LINE
CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/Users/largett/Documents/GitHub/blender/build_files
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=30
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=1
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/opt/homebrew/Cellar/cmake/3.30.1/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/opt/homebrew/Cellar/cmake/3.30.1/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/opt/homebrew/Cellar/cmake/3.30.1/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DLLTOOL
CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=/opt/homebrew/Cellar/cmake/3.30.1/bin/ccmake
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=MACHO
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/Users/largett/Documents/GitHub/blender
//ADVANCED property for variable: CMAKE_INSTALL_NAME_TOOL
CMAKE_INSTALL_NAME_TOOL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
CMAKE_OPTIMIZE_DEPENDENCIES:INTERNAL=ON
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_READELF
CMAKE_READELF-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/opt/homebrew/Cellar/cmake/3.30.1/share/cmake
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_TAPI
CMAKE_TAPI-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_OVERRIDE_PACKAGENAME
CPACK_OVERRIDE_PACKAGENAME-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CYCLES_TEST_DEVICES
CYCLES_TEST_DEVICES-ADVANCED:INTERNAL=1
EXECUTABLE_OUTPUT_PATH:INTERNAL=/Users/largett/Documents/GitHub/blender/build_files/bin
//Details about finding BZip2
FIND_PACKAGE_MESSAGE_DETAILS_BZip2:INTERNAL=[/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/libbz2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include][v1.0.8()]
//Details about finding Git
FIND_PACKAGE_MESSAGE_DETAILS_Git:INTERNAL=[/usr/bin/git][v2.39.3 (Apple Git-146)()]
//Details about finding OpenAL
FIND_PACKAGE_MESSAGE_DETAILS_OpenAL:INTERNAL=[/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenAL.framework][/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenAL.framework/Headers][v()]
//Details about finding ZLIB
FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//Have include execinfo.h
HAVE_EXECINFO_H:INTERNAL=1
//Have symbol malloc_stats
HAVE_MALLOC_STATS_H:INTERNAL=
LIBRARY_OUTPUT_PATH:INTERNAL=/Users/largett/Documents/GitHub/blender/build_files/lib
//ADVANCED property for variable: LLVM_STATIC
LLVM_STATIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENAL_INCLUDE_DIR
OPENAL_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENAL_LIBRARY
OPENAL_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: POSTCONFIGURE_SCRIPT
POSTCONFIGURE_SCRIPT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: POSTINSTALL_SCRIPT
POSTINSTALL_SCRIPT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PYTHON_ZSTANDARD_PATH
PYTHON_ZSTANDARD_PATH-ADVANCED:INTERNAL=1
//Test SUPPORT_NEON_BUILD
SUPPORT_NEON_BUILD:INTERNAL=1
TESTS_OUTPUT_DIR:INTERNAL=/Users/largett/Documents/GitHub/blender/build_files/bin/tests/
//ADVANCED property for variable: TEST_PYTHON_EXE
TEST_PYTHON_EXE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_ASSERT_ABORT
WITH_ASSERT_ABORT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_ASSERT_RELEASE
WITH_ASSERT_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_AUDASPACE
WITH_AUDASPACE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_BLENDER
WITH_BLENDER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_COMPILER_ASAN
WITH_COMPILER_ASAN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_COMPILER_ASAN_EXTERN
WITH_COMPILER_ASAN_EXTERN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_COMPILER_CCACHE
WITH_COMPILER_CCACHE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_COMPILER_CODE_COVERAGE
WITH_COMPILER_CODE_COVERAGE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_COMPILER_PRECOMPILED_HEADERS
WITH_COMPILER_PRECOMPILED_HEADERS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_COMPILER_SHORT_FILE_MACRO
WITH_COMPILER_SHORT_FILE_MACRO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CPU_SIMD
WITH_CPU_SIMD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CXX_GUARDEDALLOC
WITH_CXX_GUARDEDALLOC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_DEBUG_NAN
WITH_CYCLES_DEBUG_NAN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_KERNEL_ASAN
WITH_CYCLES_KERNEL_ASAN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_LOGGING
WITH_CYCLES_LOGGING-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_NATIVE_ONLY
WITH_CYCLES_NATIVE_ONLY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_PRECOMPUTE
WITH_CYCLES_PRECOMPUTE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_TEST_OSL
WITH_CYCLES_TEST_OSL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_DRAW_DEBUG
WITH_DRAW_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_GHOST_DEBUG
WITH_GHOST_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_GHOST_SDL
WITH_GHOST_SDL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_GPU_BUILDTIME_SHADER_BUILDER
WITH_GPU_BUILDTIME_SHADER_BUILDER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_HEADLESS
WITH_HEADLESS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_INSTALL_COPYRIGHT
WITH_INSTALL_COPYRIGHT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_LIBMV_SCHUR_SPECIALIZATIONS
WITH_LIBMV_SCHUR_SPECIALIZATIONS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_LINKER_LLD
WITH_LINKER_LLD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_LINKER_MOLD
WITH_LINKER_MOLD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_MEM_JEMALLOC
WITH_MEM_JEMALLOC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_MEM_VALGRIND
WITH_MEM_VALGRIND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_METAL_BACKEND
WITH_METAL_BACKEND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_OPENVDB_3_ABI_COMPATIBLE
WITH_OPENVDB_3_ABI_COMPATIBLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_PYTHON
WITH_PYTHON-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_PYTHON_SAFETY
WITH_PYTHON_SAFETY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_PYTHON_SECURITY
WITH_PYTHON_SECURITY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_RENDERDOC
WITH_RENDERDOC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_STRSIZE_DEBUG
WITH_STRSIZE_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_SYSTEM_AUDASPACE
WITH_SYSTEM_AUDASPACE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_SYSTEM_BULLET
WITH_SYSTEM_BULLET-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_SYSTEM_GFLAGS
WITH_SYSTEM_GFLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_SYSTEM_GLOG
WITH_SYSTEM_GLOG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_TESTS_BATCHED
WITH_TESTS_BATCHED-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_TESTS_SINGLE_BINARY
WITH_TESTS_SINGLE_BINARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_UNITY_BUILD
WITH_UNITY_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_VULKAN_BACKEND
WITH_VULKAN_BACKEND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_VULKAN_GUARDEDALLOC
WITH_VULKAN_GUARDEDALLOC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_VULKAN_MOLTENVK
WITH_VULKAN_MOLTENVK-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_XR_OPENXR
WITH_XR_OPENXR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_INCLUDE_DIR
ZLIB_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_LIBRARY_DEBUG
ZLIB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_LIBRARY_RELEASE
ZLIB_LIBRARY_RELEASE-ADVANCED:INTERNAL=1

